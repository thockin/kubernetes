//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	"unsafe"

	apimachinerypkgconversion "k8s.io/apimachinery/pkg/conversion"
	apimachinerypkgruntime "k8s.io/apimachinery/pkg/runtime"
	eventratelimitapiseventratelimit "k8s.io/kubernetes/plugin/pkg/admission/eventratelimit/apis/eventratelimit"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *apimachinerypkgruntime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Configuration)(nil), (*eventratelimitapiseventratelimit.Configuration)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1alpha1_Configuration_To_eventratelimit_Configuration(a.(*Configuration), b.(*eventratelimitapiseventratelimit.Configuration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*eventratelimitapiseventratelimit.Configuration)(nil), (*Configuration)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_eventratelimit_Configuration_To_v1alpha1_Configuration(a.(*eventratelimitapiseventratelimit.Configuration), b.(*Configuration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Limit)(nil), (*eventratelimitapiseventratelimit.Limit)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_v1alpha1_Limit_To_eventratelimit_Limit(a.(*Limit), b.(*eventratelimitapiseventratelimit.Limit), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*eventratelimitapiseventratelimit.Limit)(nil), (*Limit)(nil), func(a, b interface{}, scope apimachinerypkgconversion.Scope) error {
		return Convert_eventratelimit_Limit_To_v1alpha1_Limit(a.(*eventratelimitapiseventratelimit.Limit), b.(*Limit), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Configuration_To_eventratelimit_Configuration(in *Configuration, out *eventratelimitapiseventratelimit.Configuration, s apimachinerypkgconversion.Scope) error {
	out.Limits = *(*[]eventratelimitapiseventratelimit.Limit)(unsafe.Pointer(&in.Limits))
	return nil
}

// Convert_v1alpha1_Configuration_To_eventratelimit_Configuration is an autogenerated conversion function.
func Convert_v1alpha1_Configuration_To_eventratelimit_Configuration(in *Configuration, out *eventratelimitapiseventratelimit.Configuration, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1alpha1_Configuration_To_eventratelimit_Configuration(in, out, s)
}

func autoConvert_eventratelimit_Configuration_To_v1alpha1_Configuration(in *eventratelimitapiseventratelimit.Configuration, out *Configuration, s apimachinerypkgconversion.Scope) error {
	out.Limits = *(*[]Limit)(unsafe.Pointer(&in.Limits))
	return nil
}

// Convert_eventratelimit_Configuration_To_v1alpha1_Configuration is an autogenerated conversion function.
func Convert_eventratelimit_Configuration_To_v1alpha1_Configuration(in *eventratelimitapiseventratelimit.Configuration, out *Configuration, s apimachinerypkgconversion.Scope) error {
	return autoConvert_eventratelimit_Configuration_To_v1alpha1_Configuration(in, out, s)
}

func autoConvert_v1alpha1_Limit_To_eventratelimit_Limit(in *Limit, out *eventratelimitapiseventratelimit.Limit, s apimachinerypkgconversion.Scope) error {
	out.Type = eventratelimitapiseventratelimit.LimitType(in.Type)
	out.QPS = in.QPS
	out.Burst = in.Burst
	out.CacheSize = in.CacheSize
	return nil
}

// Convert_v1alpha1_Limit_To_eventratelimit_Limit is an autogenerated conversion function.
func Convert_v1alpha1_Limit_To_eventratelimit_Limit(in *Limit, out *eventratelimitapiseventratelimit.Limit, s apimachinerypkgconversion.Scope) error {
	return autoConvert_v1alpha1_Limit_To_eventratelimit_Limit(in, out, s)
}

func autoConvert_eventratelimit_Limit_To_v1alpha1_Limit(in *eventratelimitapiseventratelimit.Limit, out *Limit, s apimachinerypkgconversion.Scope) error {
	out.Type = LimitType(in.Type)
	out.QPS = in.QPS
	out.Burst = in.Burst
	out.CacheSize = in.CacheSize
	return nil
}

// Convert_eventratelimit_Limit_To_v1alpha1_Limit is an autogenerated conversion function.
func Convert_eventratelimit_Limit_To_v1alpha1_Limit(in *eventratelimitapiseventratelimit.Limit, out *Limit, s apimachinerypkgconversion.Scope) error {
	return autoConvert_eventratelimit_Limit_To_v1alpha1_Limit(in, out, s)
}
